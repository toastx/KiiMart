{"$message_type":"diagnostic","message":"unused imports: `Provider`, `Secp256k1`, and `hex`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\contracts\\contracts.rs","byte_start":197,"byte_end":200,"line_start":6,"line_end":6,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    primitives::{address, hex, Address, U256},","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\contracts\\contracts.rs","byte_start":235,"byte_end":243,"line_start":7,"line_end":7,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"    providers::{Provider,ProviderBuilder, RootProvider},","highlight_start":17,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\contracts\\contracts.rs","byte_start":317,"byte_end":326,"line_start":8,"line_end":8,"column_start":41,"column_end":50,"is_primary":true,"text":[{"text":"    signers::{k256::{ecdsa::SigningKey, Secp256k1}, local::{LocalSigner, PrivateKeySigner}},","highlight_start":41,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src\\contracts\\contracts.rs","byte_start":195,"byte_end":200,"line_start":6,"line_end":6,"column_start":25,"column_end":30,"is_primary":true,"text":[{"text":"    primitives::{address, hex, Address, U256},","highlight_start":25,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\contracts\\contracts.rs","byte_start":235,"byte_end":244,"line_start":7,"line_end":7,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"    providers::{Provider,ProviderBuilder, RootProvider},","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\contracts\\contracts.rs","byte_start":297,"byte_end":298,"line_start":8,"line_end":8,"column_start":21,"column_end":22,"is_primary":true,"text":[{"text":"    signers::{k256::{ecdsa::SigningKey, Secp256k1}, local::{LocalSigner, PrivateKeySigner}},","highlight_start":21,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\contracts\\contracts.rs","byte_start":315,"byte_end":326,"line_start":8,"line_end":8,"column_start":39,"column_end":50,"is_primary":true,"text":[{"text":"    signers::{k256::{ecdsa::SigningKey, Secp256k1}, local::{LocalSigner, PrivateKeySigner}},","highlight_start":39,"highlight_end":50}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\contracts\\contracts.rs","byte_start":326,"byte_end":327,"line_start":8,"line_end":8,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"    signers::{k256::{ecdsa::SigningKey, Secp256k1}, local::{LocalSigner, PrivateKeySigner}},","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `Provider`, `Secp256k1`, and `hex`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\contracts\\contracts.rs:6:27\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    primitives::{address, hex, Address, U256},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    providers::{Provider,ProviderBuilder, RootProvider},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    signers::{k256::{ecdsa::SigningKey, Secp256k1}, local::{LocalSigner, PrivateKeySigner}},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"function `main` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src\\contracts\\contracts.rs","byte_start":2632,"byte_end":2636,"line_start":76,"line_end":76,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"async fn main() -> Result<(), Box<dyn std::error::Error>> {","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function `main` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\contracts\\contracts.rs:76:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0masync fn main() -> Result<(), Box<dyn std::error::Error>> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"2 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: 2 warnings emitted\u001b[0m\n\n"}
